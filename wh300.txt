[ ] Convert the excel Over300D worksheet to csv
    Input : upper-left corner of the entire table  et = [1,1,23,271] entire table
            lower-right corner of the entire table
            upper-left corner of the data area     da = [5,4,22,270] data area
            lower-right corner of the data area    
    1. read the entire table
    2. clear everything in the data area except red cells
       activeCell :> Interior.Color == 0x0000ff 

    \ 採用 offset 比較快速 22 sec 用 goto 的要 53 sec
    ( 固定站在參考座標原點上 ) 1 1 goto <js>
    var et = [1,1,23,271] // entire table    
    var da = [5,4,22,270] // data area    
    var st_row = 3 // The row of section ID
    var pn_col = 3 // The column of partNo
    var csv = ""
    for (var row=et[1]; row<=et[3]; row++){
        for (var col=et[0]; col<=et[2]; col++){
            var cell = push(col-1).push(row-1).execute('offset').pop()
            var inDA = col >= da[0] && col <= da[2] && row >= da[1] && row <= da[3]  
            if (cell.value) {
                if (inDA){ 
                    csv += (cell.Interior.Color==255) ? cell.value : ""
                } else {
                    csv += cell.value
                }
            }
            csv += ','
        }
        csv += '\n'
    }
    push(csv)
    </js> to csv 
    
    3. Project-Name column 從上而下，若是空的就用最近的 Project-Name
       補滿。
       
    4. cell color and position
      \ color 
        jeforth _excel_ _cell_ _color_ 0xbbggrr    
        > activeCell :> Interior.Color .  \ get cell color, it's red 00 00 ff
        255 OK 
        > activeCell :> Interior.Color .  \ get cell color, it's white ff ff ff
        16777215 OK 
        > activeCell :: Interior.Color=65280  \ set cell color, it's green 00 ff 00
         OK 
        > activeCell :: Interior.Color=0xff0000 \ set cell color, it's blue ff 00 00
      \ position
        > activeCell :> address .
        $E$3 OK 
        > activeCell :> column .
        5 OK 
        > activeCell :> row .
        3 OK 
        
    5. 原來同事做好的 excel 有問題。總數 55 錯的，55 是計數，總數應該是 151。
       表示，同一料號的物料如果有多個，只標 tag 到一個，其他的都漏了。
       應該要照 aging 最老的排序，足額標上。
       
    6. 以上的構想
        1. 總表按 aging 排序，用 excel 做就可以了，這個可以自動防呆檢查。
        2. 依料號來總表從頭比對下來，找到料號，再比對部門代號（課級），對
           了就把 Tag 打上
        3. 標滿足額為止
        4. 繼續下一個料號

    7. 所以「人工樞紐分析表」也就是 「Labeled 資料表」整理出來如下：
       料號 部門 數量
       
       照這樣看，不必輸出 csv 檔了，直接得到「Labeled 資料表」即可。改寫
       
        \ 取得「Labeled 資料表」<--- 成功了
        ( 固定站在參考座標原點上 ) 1 1 goto <js>
        var et = [1,1,23,271] // entire table    
        var da = [5,4,22,270] // data area   
        var st_row = 3 // The row of section ID
        var pn_col = 3 // The column of partNo
        var qty,partn,section
        var csv = "料號,部門,數量,\n"
        for (var row=et[1]; row<=et[3]; row++){
            for (var col=et[0]; col<=et[2]; col++){
                var cell = push(col-1).push(row-1).execute('offset').pop()
                var inDA = col >= da[0] && col <= da[2] && row >= da[1] && row <= da[3]  
                if (cell.value) {
                    if (inDA && cell.Interior.Color==255){ 
                        qty = cell.value 
                        section = push(cell.column-1).push(st_row-1).execute('offset').pop().value 
                        partn = push(pn_col-1).push(cell.row-1).execute('offset').pop().value 
                        csv += partn + ',' + section + ',' + qty + ',\n'  
                    }
                }
            }
        }
        push(csv)
        </js> to csv 
        
        \ 取得「Labeled 資料表」先放 memory 再寫出到 csv <--- 
        ( 固定站在參考座標原點上 ) 1 1 goto <js>
        var et = [1,1,23,271] // entire table    
        var da = [5,4,22,270] // data area   
        var st_row = 3 // The row of section ID
        var pn_col = 3 // The column of partNo
        var qty,partn,section, 料號=[], 部門=[], 數量=[]
        var csv = "料號,部門,數量,\n"
        for (var row=et[1]; row<=et[3]; row++){
            for (var col=et[0]; col<=et[2]; col++){
                var cell = push(col-1).push(row-1).execute('offset').pop()
                var inDA = col >= da[0] && col <= da[2] && row >= da[1] && row <= da[3]  
                if (cell.value) {
                    if (inDA && cell.Interior.Color==255){ 
                        qty = cell.value 
                        section = push(cell.column-1).push(st_row-1).execute('offset').pop().value 
                        partn = push(pn_col-1).push(cell.row-1).execute('offset').pop().value 
                        csv += partn + ',' + section + ',' + qty + ',\n'  
                        料號.push(partn)
                        部門.push(section)
                        數量.push(qty)
                    }
                }
            }
        }
        push(csv)
        push({'料號':料號,'部門':部門,'數量':數量})
        </js> to csv 
       
    8. [x] 手工怎麼看的？ 只看料號嗎？看不看同一個 project name 底下的重複狀況？
           看的時候 ProjectName 要看的，因為 keep rule 有的按 ProjectName 有的按
           PartNo. 但是要把 Tag 倒標回去 detail 表時，只按 PartNo 與部門，找最老
           的 Tag 上就對了。
    
    9. 可以來 detail worksheet 打 tag 了，開始寫 。。。。。

        char detail      constant 總表名 // ( -- str ) worksheet name
        char Over300D    constant 樞紐分析表名 // ( -- str ) worksheet name
        js> [1,1,23,271] constant 樞紐分析表「整表」座標
        js> [5,4,22,270] constant 樞紐分析表「資料」座標
        3                constant 樞紐分析表「部門代碼row」
        3                constant 樞紐分析表「料號column」
        {}               value    Labeled資料表
        ""               value    csv // ( -- csv ) Labeled資料表's csv string
        char u           constant 總表Tag欄
        char c           constant 總表PartNo欄
        char n           constant 總表部門欄
        
        
        總表名 activeWorkbook :> worksheets(pop()) constant 總表 // ( -- worksheet )
        樞紐分析表名 activeWorkbook :> worksheets(pop()) constant 樞紐分析表 // ( -- worksheet )
        
        \ 切到樞紐分析表，取得「Labeled資料表」
        
        樞紐分析表 :: activate() 
        activeSheet :> name . .(  <-- Activated worksheet 應該是「樞紐分析表」 ) . cr
        
        ( 固定站在參考座標原點上 ) 1 1 goto 
        
        <js>
        var et = vm[context]['樞紐分析表「整表」座標']         // entire table    
        var da = vm[context]['樞紐分析表「資料」座標']         // data area   
        var st_row = vm[context]['樞紐分析表「部門代碼row」']  // The row of section ID
        var pn_col = vm[context]['樞紐分析表「料號column」']   // The column of partNo
        var qty,partn,section, 料號=[], 部門=[], 數量=[]
        var csv = "料號,部門,數量,\n"
        for (var row=et[1]; row<=et[3]; row++){
            for (var col=et[0]; col<=et[2]; col++){
                var cell = push(col-1).push(row-1).execute('offset').pop()
                var inDA = col >= da[0] && col <= da[2] && row >= da[1] && row <= da[3]  
                if (cell.value) {
                    if (inDA && cell.Interior.Color==255){ 
                        qty = cell.value 
                        section = push(cell.column-1).push(st_row-1).execute('offset').pop().value 
                        partn = push(pn_col-1).push(cell.row-1).execute('offset').pop().value 
                        csv += partn + ',' + section + ',' + qty + ',\n'  
                        料號.push(partn)
                        部門.push(section)
                        數量.push(qty)
                    }
                }
            }
        }
        push({'料號':料號,'部門':部門,'數量':數量})
        push(csv)
        </js> to csv to Labeled資料表
        
        \ 檢查一下
        Labeled資料表 :> 料號.length \ 55 OK 
        Labeled資料表 :> 部門.length \ 55 OK 
        Labeled資料表 :> 數量.length \ 55 OK
        ( a b c ) over ( a b c b ) = ( a b b=c ) -rot 
        ( b=c a b ) over ( b=c a b a ) = ( b=c a a=b )
        rot ( a a=b b=c ) and 
        [if]   constant Labeled資料表長度
        [else] .( Error! Labeled資料表 內部長度不一致 ) cr 
        [then]
        
        char c           constant 總表PartNo欄
        char u           constant 總表Tag欄
        char n           constant 總表部門欄
        \ 總表部門欄 :> toUpperCase() letter>column# ( 轉成數字 )
        
        
        \ 切到總表 
        
        總表 :: activate() 
        activeSheet :> name . .(  <-- Activated worksheet 應該是「Detail」 ) . cr
        
        : 跳到「總表PartNo欄開頭」 總表PartNo欄 1 + jump ;
        last execute activeCell address . .(  <-- 應該是「$C$1」 ) . cr

        \ 取得 partNo 欄的長度
        
        activeCell column column#>letter dup char : + swap + ( c:c column )
        activeSheet :> range(pop()) bottom constant partNo欄的長度 // ( -- int )

        <comment> 實驗成功
        <js>    
            var cc = ""
            for (row=1; row<=vm.v('partNo欄的長度'); row++){
                var cell = push(0).push(row-1).execute('offset').pop()
                cc += cell.value + '\n'
            }
            push(cc)
        </js> . cr
        </comment>

        總表部門欄   :> toUpperCase() letter>column# constant 總表部門欄#
        總表Tag欄    :> toUpperCase() letter>column# constant 總表Tag欄#
        總表PartNo欄 :> toUpperCase() letter>column# constant 總表PartNo欄#

        <comment> 檢驗成功！        
        跳到「總表PartNo欄開頭」  ( 參考座標 )
        0 ( index of Labeled資料表 ) <js>    
            index  = pop() // 外面 指定 Labeled資料表 某一 index 進來
            partNo = vm.v('Labeled資料表')['料號'][index]
            DEPT   = vm.v('Labeled資料表')['部門'][index]
            QTY    = vm.v('Labeled資料表')['數量'][index]
            row    = vm.v('partNo欄的長度')-2 // 最後兩個未借出
            cell   = push(0).push(row-1).execute('offset').pop()
            pn     = cell.value
            dp     = push(vm.v('總表部門欄#')-vm.v('總表PartNo欄#'))
                     .push(row-1)
                     .execute('offset').pop()
                     // 有可能是 undefined 表示還在庫房裡，未領用。
            tag_cell = 
                     push(vm.v('總表Tag欄#')-vm.v('總表PartNo欄#'))
                     .push(row-1)
                     .execute('offset').pop()
                     // 有可能是 undefined
            push({
                'index':index,
                'partNo':partNo,
                'DEPT':DEPT,
                'QTY':QTY,
                'row':row,
                'cell':cell,
                'pn':pn,
                'dp':dp,
                'tag_cell':tag_cell})
        </js>  
        </comment>

        <comment> 單一 Labeled資料表 單一件，多件 皆成功了
        now . cr
        跳到「總表PartNo欄開頭」 ( 參考座標 ) 
        0 ( Labeled資料表 index ) <js>    
            index  = pop() // 外面 指定 Labeled資料表 某一 index 進來
            partNo = vm.v('Labeled資料表')['料號'][index]
            DEPT   = vm.v('Labeled資料表')['部門'][index]
            QTY    = vm.v('Labeled資料表')['數量'][index]
            
            for (row=1; row<=vm.v('partNo欄的長度'); row++){
                var cell = push(0).push(row-1).execute('offset').pop()
                var pn = cell.value
                var dp = push(vm.v('總表部門欄#')-vm.v('總表PartNo欄#'))
                         .push(row-1)
                         .execute('offset').pop().value
                         // 有可能是 undefined 表示還在庫房裡，未領用。
                if (pn==partNo && dp==DEPT){
                    tag_cell = 
                        push(vm.v('總表Tag欄#')-vm.v('總表PartNo欄#'))
                        .push(row-1)
                        .execute('offset').pop()
                        // 有可能是 undefined
                    tag_cell.value = 1
                    tag_cell.Interior.Color = 0x0000FF // Red 
                    QTY -= 1
                    if (QTY) continue
                    else break
                }
                // if (row==500) break; // Debug
            }
            push({
                'index':index,
                'partNo':partNo,
                'DEPT':DEPT,
                'QTY':QTY,
                'row':row,
                'cell':cell,
                'pn':pn,
                'dp':dp,
                'tag_cell':tag_cell})
        </js>
        now . cr constant result 
        </comment>

        : Labeled資料表>倒填一項回總表 ( i -- ) \ i 是 Labeled資料表 的 index 
            跳到「總表PartNo欄開頭」 ( 參考座標 ) 
            <js>    
                index  = pop() // 外面 指定 Labeled資料表 某一 index 進來
                partNo = vm.v('Labeled資料表')['料號'][index]
                DEPT   = vm.v('Labeled資料表')['部門'][index]
                QTY    = vm.v('Labeled資料表')['數量'][index]
                
                for (row=1; row<=vm.v('partNo欄的長度'); row++){
                    push(1).execute('nap') // 避免 js host 以為程式咬死而發警告干擾
                    var cell = push(0).push(row-1).execute('offset').pop()
                    var pn = cell.value
                    var dp = push(vm.v('總表部門欄#')-vm.v('總表PartNo欄#'))
                             .push(row-1)
                             .execute('offset').pop().value
                             // 有可能是 undefined 表示還在庫房裡，未領用。
                    if (pn==partNo && dp==DEPT){
                        tag_cell = 
                            push(vm.v('總表Tag欄#')-vm.v('總表PartNo欄#'))
                            .push(row-1)
                            .execute('offset').pop()
                            // 有可能是 undefined
                        tag_cell.value = 1
                        tag_cell.Interior.Color = 0x0000FF // Red 
                        QTY -= 1
                        if (QTY) continue
                        else break
                    }
                }
            </js> ;
        
        : Labeled資料表>倒填回總表 ( -- ) \ 全部做完
            ." Start  " now . cr
            Labeled資料表長度 for 
                Labeled資料表長度 r@ - 
                Labeled資料表>倒填一項回總表 
            next 
            ." End  " now . cr ;
            
        \ -------- 以上成功， copy-paste 到 3hta 執行 ---------------------------
        \ 先 include excel.f 
        \ 用 excel.f 的 excel instance 打開庫房的帳表 
        \ 對 age 欄排序，最老的在最上面
        \ 檢查 excel 表其他內容
        \ 填寫 本程式 最上面的參數
        \ 執行 Labeled資料表>倒填回總表 約需 兩分半鐘 的時間
        